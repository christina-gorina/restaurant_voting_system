DROP TABLE user_roles IF EXISTS;
DROP TABLE dishes IF EXISTS;
DROP TABLE restaurants IF EXISTS CASCADE;
DROP TABLE votes IF EXISTS CASCADE;
DROP TABLE users IF EXISTS;
DROP SEQUENCE global_seq IF EXISTS CASCADE;

CREATE SEQUENCE GLOBAL_SEQ AS INTEGER START WITH 100000;

CREATE TABLE users
(
    id   INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    password VARCHAR(255) NOT NULL
);
CREATE UNIQUE INDEX users_unique_email_idx
    ON users (email);

CREATE TABLE user_roles
(
    user_id INTEGER NOT NULL,
    role    VARCHAR(255),
    CONSTRAINT user_roles_idx UNIQUE (user_id, role),
    FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE restaurants
(
    id    INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
    name  VARCHAR(255) NOT NULL
);

CREATE TABLE dishes
(
    id         INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
    name       VARCHAR(255) NOT NULL,
    price      INTEGER      NOT NULL,
    date       DATE         NOT NULL,
    restaurant INTEGER      NOT NULL,
    FOREIGN KEY (restaurant) REFERENCES restaurants (id) ON DELETE CASCADE
);

CREATE TABLE votes(
    id         INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
    restaurant INTEGER NOT NULL,
    user INTEGER NOT NULL,
    date_time TIMESTAMP NOT NULL,
    FOREIGN KEY (restaurant) REFERENCES restaurants (id) ON DELETE CASCADE,
    FOREIGN KEY (user) REFERENCES users (id) ON DELETE CASCADE
);
CREATE UNIQUE INDEX user_restaurant_unique_vote_idx
    ON votes (restaurant, user)
